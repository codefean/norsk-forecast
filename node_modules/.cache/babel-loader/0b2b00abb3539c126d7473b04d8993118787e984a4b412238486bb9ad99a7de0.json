{"ast":null,"code":"export function frostToGeoJSON(frostData) {\n  if (!frostData || !frostData.data) {\n    return {\n      type: \"FeatureCollection\",\n      features: []\n    };\n  }\n  return {\n    type: \"FeatureCollection\",\n    features: frostData.data.filter(obs => {\n      var _obs$geometry;\n      return ((_obs$geometry = obs.geometry) === null || _obs$geometry === void 0 ? void 0 : _obs$geometry.type) === \"Point\" && Array.isArray(obs.geometry.coordinates) && obs.geometry.coordinates.length === 2 && obs.geometry.coordinates.every(c => Number.isFinite(c));\n    }).map(obs => {\n      var _getValue, _getValue2, _getValue3;\n      const getValue = id => {\n        var _obs$observations$fin, _obs$observations, _obs$observations$fin2;\n        return (_obs$observations$fin = (_obs$observations = obs.observations) === null || _obs$observations === void 0 ? void 0 : (_obs$observations$fin2 = _obs$observations.find(o => o.elementId === id)) === null || _obs$observations$fin2 === void 0 ? void 0 : _obs$observations$fin2.value) !== null && _obs$observations$fin !== void 0 ? _obs$observations$fin : null;\n      };\n      return {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: obs.geometry.coordinates\n        },\n        properties: {\n          snow_depth: Number((_getValue = getValue(\"snow_depth\")) !== null && _getValue !== void 0 ? _getValue : 0),\n          precipitation_type: String((_getValue2 = getValue(\"precipitation_type\")) !== null && _getValue2 !== void 0 ? _getValue2 : \"none\"),\n          wind_speed: Number((_getValue3 = getValue(\"wind_speed\")) !== null && _getValue3 !== void 0 ? _getValue3 : 0),\n          referenceTime: obs.referenceTime,\n          sourceId: obs.sourceId\n        }\n      };\n    })\n  };\n}","map":{"version":3,"names":["frostToGeoJSON","frostData","data","type","features","filter","obs","_obs$geometry","geometry","Array","isArray","coordinates","length","every","c","Number","isFinite","map","_getValue","_getValue2","_getValue3","getValue","id","_obs$observations$fin","_obs$observations","_obs$observations$fin2","observations","find","o","elementId","value","properties","snow_depth","precipitation_type","String","wind_speed","referenceTime","sourceId"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/utils/transform.js"],"sourcesContent":["export function frostToGeoJSON(frostData) {\n  if (!frostData || !frostData.data) {\n    return { type: \"FeatureCollection\", features: [] };\n  }\n\n  return {\n    type: \"FeatureCollection\",\n    features: frostData.data\n      .filter(\n        obs =>\n          obs.geometry?.type === \"Point\" &&\n          Array.isArray(obs.geometry.coordinates) &&\n          obs.geometry.coordinates.length === 2 &&\n          obs.geometry.coordinates.every(c => Number.isFinite(c))\n      )\n      .map(obs => {\n        const getValue = id =>\n          obs.observations?.find(o => o.elementId === id)?.value ?? null;\n\n        return {\n          type: \"Feature\",\n          geometry: {\n            type: \"Point\",\n            coordinates: obs.geometry.coordinates,\n          },\n          properties: {\n            snow_depth: Number(getValue(\"snow_depth\") ?? 0),\n            precipitation_type: String(getValue(\"precipitation_type\") ?? \"none\"),\n            wind_speed: Number(getValue(\"wind_speed\") ?? 0),\n            referenceTime: obs.referenceTime,\n            sourceId: obs.sourceId,\n          },\n        };\n      }),\n  };\n}\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,SAAS,EAAE;EACxC,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACC,IAAI,EAAE;IACjC,OAAO;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,QAAQ,EAAE;IAAG,CAAC;EACpD;EAEA,OAAO;IACLD,IAAI,EAAE,mBAAmB;IACzBC,QAAQ,EAAEH,SAAS,CAACC,IAAI,CACrBG,MAAM,CACLC,GAAG;MAAA,IAAAC,aAAA;MAAA,OACD,EAAAA,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcJ,IAAI,MAAK,OAAO,IAC9BM,KAAK,CAACC,OAAO,CAACJ,GAAG,CAACE,QAAQ,CAACG,WAAW,CAAC,IACvCL,GAAG,CAACE,QAAQ,CAACG,WAAW,CAACC,MAAM,KAAK,CAAC,IACrCN,GAAG,CAACE,QAAQ,CAACG,WAAW,CAACE,KAAK,CAACC,CAAC,IAAIC,MAAM,CAACC,QAAQ,CAACF,CAAC,CAAC,CAAC;IAAA,CAC3D,CAAC,CACAG,GAAG,CAACX,GAAG,IAAI;MAAA,IAAAY,SAAA,EAAAC,UAAA,EAAAC,UAAA;MACV,MAAMC,QAAQ,GAAGC,EAAE;QAAA,IAAAC,qBAAA,EAAAC,iBAAA,EAAAC,sBAAA;QAAA,QAAAF,qBAAA,IAAAC,iBAAA,GACjBlB,GAAG,CAACoB,YAAY,cAAAF,iBAAA,wBAAAC,sBAAA,GAAhBD,iBAAA,CAAkBG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAKP,EAAE,CAAC,cAAAG,sBAAA,uBAA/CA,sBAAA,CAAiDK,KAAK,cAAAP,qBAAA,cAAAA,qBAAA,GAAI,IAAI;MAAA;MAEhE,OAAO;QACLpB,IAAI,EAAE,SAAS;QACfK,QAAQ,EAAE;UACRL,IAAI,EAAE,OAAO;UACbQ,WAAW,EAAEL,GAAG,CAACE,QAAQ,CAACG;QAC5B,CAAC;QACDoB,UAAU,EAAE;UACVC,UAAU,EAAEjB,MAAM,EAAAG,SAAA,GAACG,QAAQ,CAAC,YAAY,CAAC,cAAAH,SAAA,cAAAA,SAAA,GAAI,CAAC,CAAC;UAC/Ce,kBAAkB,EAAEC,MAAM,EAAAf,UAAA,GAACE,QAAQ,CAAC,oBAAoB,CAAC,cAAAF,UAAA,cAAAA,UAAA,GAAI,MAAM,CAAC;UACpEgB,UAAU,EAAEpB,MAAM,EAAAK,UAAA,GAACC,QAAQ,CAAC,YAAY,CAAC,cAAAD,UAAA,cAAAA,UAAA,GAAI,CAAC,CAAC;UAC/CgB,aAAa,EAAE9B,GAAG,CAAC8B,aAAa;UAChCC,QAAQ,EAAE/B,GAAG,CAAC+B;QAChB;MACF,CAAC;IACH,CAAC;EACL,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}