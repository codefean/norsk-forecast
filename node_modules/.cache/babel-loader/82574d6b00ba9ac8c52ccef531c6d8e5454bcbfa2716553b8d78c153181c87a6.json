{"ast":null,"code":"var _jsxFileName = \"/Users/seanfagan/Desktop/climate-globe/src/ClimateGlobe.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoibWFwZmVhbiIsImEiOiJjbTNuOGVvN3cxMGxsMmpzNThzc2s3cTJzIn0.1uhX17BCYd65SeQsW1yibA\";\nexport default function ClimateGlobe() {\n  _s();\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n  useEffect(() => {\n    if (map.current) return; // Prevent re-initialization\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-streets-v12\",\n      center: [10, 65],\n      // Scandinavia region\n      zoom: 3,\n      projection: \"globe\"\n    });\n\n    // Add temperature tileset\n    map.current.on(\"load\", () => {\n      map.current.addSource(\"tas\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.awgdtmlz\",\n        // your tas MBTiles ID\n        tileSize: 256\n      });\n      map.current.addLayer({\n        id: \"tas-layer\",\n        type: \"raster\",\n        source: \"tas\",\n        paint: {\n          \"raster-opacity\": 0.7\n        }\n      });\n\n      // Add precipitation tileset\n      map.current.addSource(\"pr\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.4m01bgb0\",\n        // your pr MBTiles ID\n        tileSize: 256\n      });\n      map.current.addLayer({\n        id: \"pr-layer\",\n        type: \"raster\",\n        source: \"pr\",\n        paint: {\n          \"raster-opacity\": 0.7\n        }\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapContainer,\n    style: {\n      width: \"100%\",\n      height: \"100vh\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(ClimateGlobe, \"Lk3Flgv7n4ByEejhurS8fIb2FSQ=\");\n_c = ClimateGlobe;\nvar _c;\n$RefreshReg$(_c, \"ClimateGlobe\");","map":{"version":3,"names":["React","useEffect","useRef","mapboxgl","jsxDEV","_jsxDEV","accessToken","ClimateGlobe","_s","mapContainer","map","current","Map","container","style","center","zoom","projection","on","addSource","type","url","tileSize","addLayer","id","source","paint","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/ClimateGlobe.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nmapboxgl.accessToken = \"pk.eyJ1IjoibWFwZmVhbiIsImEiOiJjbTNuOGVvN3cxMGxsMmpzNThzc2s3cTJzIn0.1uhX17BCYd65SeQsW1yibA\";\n\nexport default function ClimateGlobe() {\n  const mapContainer = useRef(null);\n  const map = useRef(null);\n\n  useEffect(() => {\n    if (map.current) return; // Prevent re-initialization\n\n    map.current = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-streets-v12\",\n      center: [10, 65], // Scandinavia region\n      zoom: 3,\n      projection: \"globe\",\n    });\n\n    // Add temperature tileset\n    map.current.on(\"load\", () => {\n      map.current.addSource(\"tas\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.awgdtmlz\", // your tas MBTiles ID\n        tileSize: 256,\n      });\n\n      map.current.addLayer({\n        id: \"tas-layer\",\n        type: \"raster\",\n        source: \"tas\",\n        paint: { \"raster-opacity\": 0.7 },\n      });\n\n      // Add precipitation tileset\n      map.current.addSource(\"pr\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.4m01bgb0\", // your pr MBTiles ID\n        tileSize: 256,\n      });\n\n      map.current.addLayer({\n        id: \"pr-layer\",\n        type: \"raster\",\n        source: \"pr\",\n        paint: { \"raster-opacity\": 0.7 },\n      });\n    });\n  }, []);\n\n  return (\n    <div\n      ref={mapContainer}\n      style={{ width: \"100%\", height: \"100vh\" }}\n    />\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtCF,QAAQ,CAACG,WAAW,GAAG,2FAA2F;AAElH,eAAe,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAMC,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMQ,GAAG,GAAGR,MAAM,CAAC,IAAI,CAAC;EAExBD,SAAS,CAAC,MAAM;IACd,IAAIS,GAAG,CAACC,OAAO,EAAE,OAAO,CAAC;;IAEzBD,GAAG,CAACC,OAAO,GAAG,IAAIR,QAAQ,CAACS,GAAG,CAAC;MAC7BC,SAAS,EAAEJ,YAAY,CAACE,OAAO;MAC/BG,KAAK,EAAE,8CAA8C;MACrDC,MAAM,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC;MAAE;MAClBC,IAAI,EAAE,CAAC;MACPC,UAAU,EAAE;IACd,CAAC,CAAC;;IAEF;IACAP,GAAG,CAACC,OAAO,CAACO,EAAE,CAAC,MAAM,EAAE,MAAM;MAC3BR,GAAG,CAACC,OAAO,CAACQ,SAAS,CAAC,KAAK,EAAE;QAC3BC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,2BAA2B;QAAE;QAClCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEFZ,GAAG,CAACC,OAAO,CAACY,QAAQ,CAAC;QACnBC,EAAE,EAAE,WAAW;QACfJ,IAAI,EAAE,QAAQ;QACdK,MAAM,EAAE,KAAK;QACbC,KAAK,EAAE;UAAE,gBAAgB,EAAE;QAAI;MACjC,CAAC,CAAC;;MAEF;MACAhB,GAAG,CAACC,OAAO,CAACQ,SAAS,CAAC,IAAI,EAAE;QAC1BC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,2BAA2B;QAAE;QAClCC,QAAQ,EAAE;MACZ,CAAC,CAAC;MAEFZ,GAAG,CAACC,OAAO,CAACY,QAAQ,CAAC;QACnBC,EAAE,EAAE,UAAU;QACdJ,IAAI,EAAE,QAAQ;QACdK,MAAM,EAAE,IAAI;QACZC,KAAK,EAAE;UAAE,gBAAgB,EAAE;QAAI;MACjC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACErB,OAAA;IACEsB,GAAG,EAAElB,YAAa;IAClBK,KAAK,EAAE;MAAEc,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEN;AAACzB,EAAA,CApDuBD,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}