{"ast":null,"code":"var _jsxFileName = \"/Users/seanfagan/Desktop/climate-globe/src/components/MapView.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport Layers from \"./Layers\";\nimport SnowOverlay from \"./SnowOverlay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\nfunction MapView({\n  geojson\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const mapObj = useRef(null);\n  useEffect(() => {\n    mapObj.current = new mapboxgl.Map({\n      container: mapRef.current,\n      style: \"mapbox://styles/mapbox/outdoors-v12\",\n      center: [10, 64.5],\n      zoom: 4.2,\n      pitch: 60,\n      antialias: true\n    });\n    mapObj.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n    mapObj.current.on(\"load\", async () => {\n      mapObj.current.addSource(\"mapbox-dem\", {\n        type: \"raster-dem\",\n        url: \"mapbox://mapbox.terrain-rgb\",\n        tileSize: 512,\n        maxzoom: 14\n      });\n      mapObj.current.setTerrain({\n        source: \"mapbox-dem\",\n        exaggeration: 1.5\n      });\n      if (geojson) {\n        mapObj.current.addSource(\"frost-live\", {\n          type: \"geojson\",\n          data: geojson\n        });\n        Layers(mapObj.current);\n      }\n    });\n    return () => mapObj.current.remove();\n  }, []);\n  useEffect(() => {\n    if (mapObj.current && mapObj.current.getSource(\"frost-live\")) {\n      mapObj.current.getSource(\"frost-live\").setData(geojson);\n    }\n  }, [geojson]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), mapObj.current && /*#__PURE__*/_jsxDEV(SnowOverlay, {\n      geojson: geojson,\n      map: mapObj.current\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(MapView, \"y4trjKhp2KZOuCsUS6yxqbJ/Z8k=\");\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","useEffect","useRef","mapboxgl","Layers","SnowOverlay","jsxDEV","_jsxDEV","accessToken","process","env","REACT_APP_MAPBOX_TOKEN","MapView","geojson","_s","mapRef","mapObj","current","Map","container","style","center","zoom","pitch","antialias","addControl","NavigationControl","on","addSource","type","url","tileSize","maxzoom","setTerrain","source","exaggeration","data","remove","getSource","setData","position","width","height","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/components/MapView.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport Layers from \"./Layers\";\nimport SnowOverlay from \"./SnowOverlay\";\n\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\n\nfunction MapView({ geojson }) {\n  const mapRef = useRef(null);\n  const mapObj = useRef(null);\n\n  useEffect(() => {\n    mapObj.current = new mapboxgl.Map({\n      container: mapRef.current,\n      style: \"mapbox://styles/mapbox/outdoors-v12\",\n      center: [10, 64.5],\n      zoom: 4.2,\n      pitch: 60,\n      antialias: true,\n    });\n\n    mapObj.current.addControl(new mapboxgl.NavigationControl(), \"top-right\");\n\n    mapObj.current.on(\"load\", async () => {\n      mapObj.current.addSource(\"mapbox-dem\", {\n        type: \"raster-dem\",\n        url: \"mapbox://mapbox.terrain-rgb\",\n        tileSize: 512,\n        maxzoom: 14,\n      });\n\n      mapObj.current.setTerrain({ source: \"mapbox-dem\", exaggeration: 1.5 });\n\n\n      if (geojson) {\n        mapObj.current.addSource(\"frost-live\", { type: \"geojson\", data: geojson });\n        Layers(mapObj.current);\n      }\n    });\n\n    return () => mapObj.current.remove();\n  }, []);\n\n  useEffect(() => {\n    if (mapObj.current && mapObj.current.getSource(\"frost-live\")) {\n      mapObj.current.getSource(\"frost-live\").setData(geojson);\n    }\n  }, [geojson]);\n\n  return (\n    <div style={{ position: \"relative\", width: \"100%\", height: \"100vh\" }}>\n      <div ref={mapRef} style={{ width: \"100%\", height: \"100%\" }} />\n      {mapObj.current && <SnowOverlay geojson={geojson} map={mapObj.current} />}\n    </div>\n  );\n}\n\nexport default MapView;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}