{"ast":null,"code":"import { fetchStations } from \"../api/frostApi\";\nuseEffect(() => {\n  async function loadStations() {\n    const stations = await fetchStations();\n    const geojson = {\n      type: \"FeatureCollection\",\n      features: stations.data.filter(s => {\n        var _s$geometry;\n        return (_s$geometry = s.geometry) === null || _s$geometry === void 0 ? void 0 : _s$geometry.coordinates;\n      }).map(station => ({\n        type: \"Feature\",\n        geometry: station.geometry,\n        properties: {\n          id: station.id,\n          name: station.name\n        }\n      }))\n    };\n    setGeojson(geojson);\n  }\n  loadStations();\n}, []);","map":{"version":3,"names":["fetchStations","useEffect","loadStations","stations","geojson","type","features","data","filter","s","_s$geometry","geometry","coordinates","map","station","properties","id","name","setGeojson"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/api/frostApi.js"],"sourcesContent":["import { fetchStations } from \"../api/frostApi\";\n\nuseEffect(() => {\n  async function loadStations() {\n    const stations = await fetchStations();\n    const geojson = {\n      type: \"FeatureCollection\",\n      features: stations.data\n        .filter(s => s.geometry?.coordinates)\n        .map(station => ({\n          type: \"Feature\",\n          geometry: station.geometry,\n          properties: {\n            id: station.id,\n            name: station.name\n          }\n        }))\n    };\n    setGeojson(geojson);\n  }\n\n  loadStations();\n}, []);\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,iBAAiB;AAE/CC,SAAS,CAAC,MAAM;EACd,eAAeC,YAAYA,CAAA,EAAG;IAC5B,MAAMC,QAAQ,GAAG,MAAMH,aAAa,CAAC,CAAC;IACtC,MAAMI,OAAO,GAAG;MACdC,IAAI,EAAE,mBAAmB;MACzBC,QAAQ,EAAEH,QAAQ,CAACI,IAAI,CACpBC,MAAM,CAACC,CAAC;QAAA,IAAAC,WAAA;QAAA,QAAAA,WAAA,GAAID,CAAC,CAACE,QAAQ,cAAAD,WAAA,uBAAVA,WAAA,CAAYE,WAAW;MAAA,EAAC,CACpCC,GAAG,CAACC,OAAO,KAAK;QACfT,IAAI,EAAE,SAAS;QACfM,QAAQ,EAAEG,OAAO,CAACH,QAAQ;QAC1BI,UAAU,EAAE;UACVC,EAAE,EAAEF,OAAO,CAACE,EAAE;UACdC,IAAI,EAAEH,OAAO,CAACG;QAChB;MACF,CAAC,CAAC;IACN,CAAC;IACDC,UAAU,CAACd,OAAO,CAAC;EACrB;EAEAF,YAAY,CAAC,CAAC;AAChB,CAAC,EAAE,EAAE,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}