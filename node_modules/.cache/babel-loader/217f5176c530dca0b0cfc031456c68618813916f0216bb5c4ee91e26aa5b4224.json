{"ast":null,"code":"export async function fetchFrostData() {\n  const clientId = process.env.REACT_APP_FROST_CLIENT_ID;\n  const headers = {\n    \"Authorization\": \"Basic \" + btoa(clientId + \":\"),\n    \"Accept\": \"application/json\"\n  };\n\n  // Example: fetch snow depth + precipitation type\n  const url = \"https://frost.met.no/observations/availableTimeSeries/v0.jsonld?sources=SN18700&elements=snow_depth,precipitation_type,wind_speed\";\n  const res = await fetch(url, {\n    headers\n  });\n  if (!res.ok) throw new Error(\"Frost API request failed\");\n  return await res.json();\n}","map":{"version":3,"names":["fetchFrostData","clientId","process","env","REACT_APP_FROST_CLIENT_ID","headers","btoa","url","res","fetch","ok","Error","json"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/api/frostApi.js"],"sourcesContent":["export async function fetchFrostData() {\n  const clientId = process.env.REACT_APP_FROST_CLIENT_ID;\n\n  const headers = {\n    \"Authorization\": \"Basic \" + btoa(clientId + \":\"),\n    \"Accept\": \"application/json\",\n  };\n\n  // Example: fetch snow depth + precipitation type\n  const url =\n    \"https://frost.met.no/observations/availableTimeSeries/v0.jsonld?sources=SN18700&elements=snow_depth,precipitation_type,wind_speed\";\n\n  const res = await fetch(url, { headers });\n  if (!res.ok) throw new Error(\"Frost API request failed\");\n  return await res.json();\n}\n"],"mappings":"AAAA,OAAO,eAAeA,cAAcA,CAAA,EAAG;EACrC,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAEtD,MAAMC,OAAO,GAAG;IACd,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAACL,QAAQ,GAAG,GAAG,CAAC;IAChD,QAAQ,EAAE;EACZ,CAAC;;EAED;EACA,MAAMM,GAAG,GACP,mIAAmI;EAErI,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAEF;EAAQ,CAAC,CAAC;EACzC,IAAI,CAACG,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;EACxD,OAAO,MAAMH,GAAG,CAACI,IAAI,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}