{"ast":null,"code":"const geo = {\n  type: \"FeatureCollection\",\n  features: stations.data\n  // ✅ Only include stations with valid geometry + coordinates\n  .filter(s => {\n    var _s$geometry;\n    return ((_s$geometry = s.geometry) === null || _s$geometry === void 0 ? void 0 : _s$geometry.type) === \"Point\" && Array.isArray(s.geometry.coordinates);\n  }).map(station => ({\n    type: \"Feature\",\n    geometry: {\n      type: \"Point\",\n      coordinates: station.geometry.coordinates\n    },\n    properties: {\n      id: station.id,\n      name: station.name\n    }\n  }))\n};","map":{"version":3,"names":["geo","type","features","stations","data","filter","s","_s$geometry","geometry","Array","isArray","coordinates","map","station","properties","id","name"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/utils/transform.js"],"sourcesContent":["const geo = {\n  type: \"FeatureCollection\",\n  features: stations.data\n    // ✅ Only include stations with valid geometry + coordinates\n    .filter(s => s.geometry?.type === \"Point\" && Array.isArray(s.geometry.coordinates))\n    .map(station => ({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: station.geometry.coordinates,\n      },\n      properties: {\n        id: station.id,\n        name: station.name,\n      },\n    })),\n};\n"],"mappings":"AAAA,MAAMA,GAAG,GAAG;EACVC,IAAI,EAAE,mBAAmB;EACzBC,QAAQ,EAAEC,QAAQ,CAACC;EACjB;EAAA,CACCC,MAAM,CAACC,CAAC;IAAA,IAAAC,WAAA;IAAA,OAAI,EAAAA,WAAA,GAAAD,CAAC,CAACE,QAAQ,cAAAD,WAAA,uBAAVA,WAAA,CAAYN,IAAI,MAAK,OAAO,IAAIQ,KAAK,CAACC,OAAO,CAACJ,CAAC,CAACE,QAAQ,CAACG,WAAW,CAAC;EAAA,EAAC,CAClFC,GAAG,CAACC,OAAO,KAAK;IACfZ,IAAI,EAAE,SAAS;IACfO,QAAQ,EAAE;MACRP,IAAI,EAAE,OAAO;MACbU,WAAW,EAAEE,OAAO,CAACL,QAAQ,CAACG;IAChC,CAAC;IACDG,UAAU,EAAE;MACVC,EAAE,EAAEF,OAAO,CAACE,EAAE;MACdC,IAAI,EAAEH,OAAO,CAACG;IAChB;EACF,CAAC,CAAC;AACN,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}