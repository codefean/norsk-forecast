{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./glaciers.css\";\nconst glacierTileset = {\n  url: \"mapbox://mapfean.bmdn0gwv\",\n  sourceLayer: \"scandi_glaciers2\",\n  sourceId: \"glaciers_scandi\"\n};\nconst glacierTileset2 = {\n  url: \"mapbox://mapfean.38aaq5bo\",\n  sourceLayer: \"svallbard_glaciers2\",\n  sourceId: \"glaciers_svalbard\"\n};\nconst FILL_LAYER_ID_1 = \"glacier-fill-scandi\";\nconst FILL_LAYER_ID_2 = \"glacier-fill-svalbard\";\nexport function useGlacierLayer({\n  mapRef\n}) {\n  _s();\n  useEffect(() => {\n    const map = mapRef === null || mapRef === void 0 ? void 0 : mapRef.current;\n    if (!map) return;\n    const addTileset = ({\n      url,\n      sourceId,\n      sourceLayer,\n      fillId\n    }) => {\n      if (!map.getSource(sourceId)) {\n        map.addSource(sourceId, {\n          type: \"vector\",\n          url\n        });\n      }\n      if (!map.getLayer(fillId)) {\n        map.addLayer({\n          id: fillId,\n          type: \"fill\",\n          source: sourceId,\n          \"source-layer\": sourceLayer,\n          paint: {\n            \"fill-color\": \"#2ba0ff\",\n            \"fill-opacity\": 0.05 // slightly more visible, optional\n          }\n        });\n      }\n    };\n    const onLoad = () => {\n      addTileset({\n        ...glacierTileset,\n        fillId: FILL_LAYER_ID_1\n      });\n      addTileset({\n        ...glacierTileset2,\n        fillId: FILL_LAYER_ID_2\n      });\n      map.setLayoutProperty(FILL_LAYER_ID_1, \"visibility\", \"visible\");\n      map.setLayoutProperty(FILL_LAYER_ID_2, \"visibility\", \"visible\");\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false,\n        offset: 10,\n        className: \"glacier-popup\"\n      });\n      map.on(\"mousemove\", e => {\n        var _features$0$propertie;\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [FILL_LAYER_ID_1, FILL_LAYER_ID_2]\n        });\n        if (!features.length) {\n          popup.remove();\n          return;\n        }\n        const glacName = (_features$0$propertie = features[0].properties) === null || _features$0$propertie === void 0 ? void 0 : _features$0$propertie.glac_name;\n        if (glacName && glacName.trim() !== \"\") {\n          popup.setLngLat(e.lngLat).setHTML(`<div class=\"glacier-label\">${glacName}</div>`).addTo(map);\n        } else {\n          popup.remove();\n        }\n      });\n      map.on(\"mouseleave\", FILL_LAYER_ID_1, () => popup.remove());\n      map.on(\"mouseleave\", FILL_LAYER_ID_2, () => popup.remove());\n    };\n    if (map.isStyleLoaded()) {\n      onLoad();\n    } else {\n      map.on(\"load\", onLoad);\n    }\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n  }, [mapRef]);\n}\n_s(useGlacierLayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["useEffect","mapboxgl","glacierTileset","url","sourceLayer","sourceId","glacierTileset2","FILL_LAYER_ID_1","FILL_LAYER_ID_2","useGlacierLayer","mapRef","_s","map","current","addTileset","fillId","getSource","addSource","type","getLayer","addLayer","id","source","paint","onLoad","setLayoutProperty","popup","Popup","closeButton","closeOnClick","offset","className","on","e","_features$0$propertie","features","queryRenderedFeatures","point","layers","length","remove","glacName","properties","glac_name","trim","setLngLat","lngLat","setHTML","addTo","isStyleLoaded","off"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/pages/glaciers.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./glaciers.css\";\n\nconst glacierTileset = {\n  url: \"mapbox://mapfean.bmdn0gwv\",\n  sourceLayer: \"scandi_glaciers2\",\n  sourceId: \"glaciers_scandi\",\n};\n\nconst glacierTileset2 = {\n  url: \"mapbox://mapfean.38aaq5bo\",\n  sourceLayer: \"svallbard_glaciers2\",\n  sourceId: \"glaciers_svalbard\",\n};\n\nconst FILL_LAYER_ID_1 = \"glacier-fill-scandi\";\nconst FILL_LAYER_ID_2 = \"glacier-fill-svalbard\";\n\nexport function useGlacierLayer({ mapRef }) {\n  useEffect(() => {\n    const map = mapRef?.current;\n    if (!map) return;\n\n    const addTileset = ({ url, sourceId, sourceLayer, fillId }) => {\n      if (!map.getSource(sourceId)) {\n        map.addSource(sourceId, { type: \"vector\", url });\n      }\n\n      if (!map.getLayer(fillId)) {\n        map.addLayer({\n          id: fillId,\n          type: \"fill\",\n          source: sourceId,\n          \"source-layer\": sourceLayer,\n          paint: {\n            \"fill-color\": \"#2ba0ff\",\n            \"fill-opacity\": 0.05, // slightly more visible, optional\n          },\n        });\n      }\n    };\n\n    const onLoad = () => {\n      addTileset({ ...glacierTileset, fillId: FILL_LAYER_ID_1 });\n      addTileset({ ...glacierTileset2, fillId: FILL_LAYER_ID_2 });\n\n      map.setLayoutProperty(FILL_LAYER_ID_1, \"visibility\", \"visible\");\n      map.setLayoutProperty(FILL_LAYER_ID_2, \"visibility\", \"visible\");\n\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false,\n        offset: 10,\n        className: \"glacier-popup\",\n      });\n\n      map.on(\"mousemove\", (e) => {\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [FILL_LAYER_ID_1, FILL_LAYER_ID_2],\n        });\n\n        if (!features.length) {\n          popup.remove();\n          return;\n        }\n\n        const glacName = features[0].properties?.glac_name;\n        if (glacName && glacName.trim() !== \"\") {\n          popup\n            .setLngLat(e.lngLat)\n            .setHTML(`<div class=\"glacier-label\">${glacName}</div>`)\n            .addTo(map);\n        } else {\n          popup.remove();\n        }\n      });\n\n      map.on(\"mouseleave\", FILL_LAYER_ID_1, () => popup.remove());\n      map.on(\"mouseleave\", FILL_LAYER_ID_2, () => popup.remove());\n    };\n\n    if (map.isStyleLoaded()) {\n      onLoad();\n    } else {\n      map.on(\"load\", onLoad);\n    }\n\n    return () => {\n      map.off(\"load\", onLoad);\n    };\n  }, [mapRef]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}