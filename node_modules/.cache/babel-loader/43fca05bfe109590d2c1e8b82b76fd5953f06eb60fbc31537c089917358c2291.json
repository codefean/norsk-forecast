{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './glaciers.css';\nconst glacierTileset = {\n  url: 'mapbox://mapfean.bmdn0gwv',\n  sourceLayer: 'scandi_glaciers2',\n  sourceId: 'glaciers_scandi'\n};\nconst glacierTileset2 = {\n  url: 'mapbox://mapfean.38aaq5bo',\n  sourceLayer: 'svalbard_glaciers2',\n  sourceId: 'glaciers_svalbard'\n};\nconst FILL_LAYER_ID_1 = 'glacier-fill-scandi';\nconst FILL_LAYER_ID_2 = 'glacier-fill-svalbard';\nconst LINE_LAYER_ID_1 = 'glacier-line-scandi';\nconst LINE_LAYER_ID_2 = 'glacier-line-svalbard';\nexport function useGlacierLayer({\n  mapRef\n}) {\n  _s();\n  useEffect(() => {\n    const map = mapRef === null || mapRef === void 0 ? void 0 : mapRef.current;\n    if (!map) return;\n    const addTileset = ({\n      url,\n      sourceId,\n      sourceLayer,\n      fillId,\n      lineId\n    }) => {\n      // Add source if it doesn't exist\n      if (!map.getSource(sourceId)) {\n        map.addSource(sourceId, {\n          type: 'vector',\n          url\n        });\n      }\n\n      // Add glacier fill layer\n      if (!map.getLayer(fillId)) {\n        map.addLayer({\n          id: fillId,\n          type: 'fill',\n          source: sourceId,\n          'source-layer': sourceLayer,\n          paint: {\n            'fill-color': '#2ba0ff',\n            'fill-opacity': 0.01\n          }\n        });\n      }\n\n      // Add glacier outline layer\n      if (!map.getLayer(lineId)) {\n        map.addLayer({\n          id: lineId,\n          type: 'line',\n          source: sourceId,\n          'source-layer': sourceLayer,\n          paint: {\n            'line-color': '#000000ff',\n            'line-width': 20\n          }\n        });\n      }\n    };\n    const onLoad = () => {\n      // Add both glacier tilesets\n      addTileset({\n        ...glacierTileset,\n        fillId: FILL_LAYER_ID_1,\n        lineId: LINE_LAYER_ID_1\n      });\n      addTileset({\n        ...glacierTileset2,\n        fillId: FILL_LAYER_ID_2,\n        lineId: LINE_LAYER_ID_2\n      });\n\n      // Always make them visible\n      map.setLayoutProperty(FILL_LAYER_ID_1, 'visibility', 'visible');\n      map.setLayoutProperty(LINE_LAYER_ID_1, 'visibility', 'visible');\n      map.setLayoutProperty(FILL_LAYER_ID_2, 'visibility', 'visible');\n      map.setLayoutProperty(LINE_LAYER_ID_2, 'visibility', 'visible');\n\n      // Single popup for both tilesets\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false,\n        offset: 10,\n        className: 'glacier-popup'\n      });\n      map.on('mousemove', e => {\n        var _features$0$propertie;\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [FILL_LAYER_ID_1, FILL_LAYER_ID_2]\n        });\n        if (!features.length) {\n          popup.remove();\n          return;\n        }\n        const glacName = (_features$0$propertie = features[0].properties) === null || _features$0$propertie === void 0 ? void 0 : _features$0$propertie.glac_name;\n        if (glacName && glacName.trim() !== '') {\n          popup.setLngLat(e.lngLat).setHTML(`<div class=\"glacier-label\">${glacName}</div>`).addTo(map);\n        } else {\n          popup.remove();\n        }\n      });\n      map.on('mouseleave', FILL_LAYER_ID_1, () => popup.remove());\n      map.on('mouseleave', FILL_LAYER_ID_2, () => popup.remove());\n    };\n    if (map.isStyleLoaded()) {\n      onLoad();\n    } else {\n      map.on('load', onLoad);\n    }\n    return () => {\n      map.off('load', onLoad);\n    };\n  }, [mapRef]);\n}\n_s(useGlacierLayer, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"names":["React","useEffect","useRef","useState","mapboxgl","glacierTileset","url","sourceLayer","sourceId","glacierTileset2","FILL_LAYER_ID_1","FILL_LAYER_ID_2","LINE_LAYER_ID_1","LINE_LAYER_ID_2","useGlacierLayer","mapRef","_s","map","current","addTileset","fillId","lineId","getSource","addSource","type","getLayer","addLayer","id","source","paint","onLoad","setLayoutProperty","popup","Popup","closeButton","closeOnClick","offset","className","on","e","_features$0$propertie","features","queryRenderedFeatures","point","layers","length","remove","glacName","properties","glac_name","trim","setLngLat","lngLat","setHTML","addTo","isStyleLoaded","off"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/pages/glaciers.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './glaciers.css';\n\nconst glacierTileset = {\n  url: 'mapbox://mapfean.bmdn0gwv',\n  sourceLayer: 'scandi_glaciers2',\n  sourceId: 'glaciers_scandi',\n};\n\nconst glacierTileset2 = {\n  url: 'mapbox://mapfean.38aaq5bo',\n  sourceLayer: 'svalbard_glaciers2',\n  sourceId: 'glaciers_svalbard',\n};\n\nconst FILL_LAYER_ID_1 = 'glacier-fill-scandi';\nconst FILL_LAYER_ID_2 = 'glacier-fill-svalbard';\nconst LINE_LAYER_ID_1 = 'glacier-line-scandi';\nconst LINE_LAYER_ID_2 = 'glacier-line-svalbard';\n\nexport function useGlacierLayer({ mapRef }) {\n  useEffect(() => {\n    const map = mapRef?.current;\n    if (!map) return;\n\n    const addTileset = ({ url, sourceId, sourceLayer, fillId, lineId }) => {\n      // Add source if it doesn't exist\n      if (!map.getSource(sourceId)) {\n        map.addSource(sourceId, { type: 'vector', url });\n      }\n\n      // Add glacier fill layer\n      if (!map.getLayer(fillId)) {\n        map.addLayer({\n          id: fillId,\n          type: 'fill',\n          source: sourceId,\n          'source-layer': sourceLayer,\n          paint: {\n            'fill-color': '#2ba0ff',\n            'fill-opacity': 0.01,\n          },\n        });\n      }\n\n      // Add glacier outline layer\n      if (!map.getLayer(lineId)) {\n        map.addLayer({\n          id: lineId,\n          type: 'line',\n          source: sourceId,\n          'source-layer': sourceLayer,\n          paint: {\n            'line-color': '#000000ff',\n            'line-width': 20,\n          },\n        });\n      }\n    };\n\n    const onLoad = () => {\n      // Add both glacier tilesets\n      addTileset({\n        ...glacierTileset,\n        fillId: FILL_LAYER_ID_1,\n        lineId: LINE_LAYER_ID_1,\n      });\n      addTileset({\n        ...glacierTileset2,\n        fillId: FILL_LAYER_ID_2,\n        lineId: LINE_LAYER_ID_2,\n      });\n\n      // Always make them visible\n      map.setLayoutProperty(FILL_LAYER_ID_1, 'visibility', 'visible');\n      map.setLayoutProperty(LINE_LAYER_ID_1, 'visibility', 'visible');\n      map.setLayoutProperty(FILL_LAYER_ID_2, 'visibility', 'visible');\n      map.setLayoutProperty(LINE_LAYER_ID_2, 'visibility', 'visible');\n\n      // Single popup for both tilesets\n      const popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false,\n        offset: 10,\n        className: 'glacier-popup'\n      });\n\n      map.on('mousemove', (e) => {\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [FILL_LAYER_ID_1, FILL_LAYER_ID_2],\n        });\n\n        if (!features.length) {\n          popup.remove();\n          return;\n        }\n\n        const glacName = features[0].properties?.glac_name;\n        if (glacName && glacName.trim() !== '') {\n          popup\n            .setLngLat(e.lngLat)\n            .setHTML(`<div class=\"glacier-label\">${glacName}</div>`)\n            .addTo(map);\n        } else {\n          popup.remove();\n        }\n      });\n\n      map.on('mouseleave', FILL_LAYER_ID_1, () => popup.remove());\n      map.on('mouseleave', FILL_LAYER_ID_2, () => popup.remove());\n    };\n\n    if (map.isStyleLoaded()) {\n      onLoad();\n    } else {\n      map.on('load', onLoad);\n    }\n\n    return () => {\n      map.off('load', onLoad);\n    };\n  }, [mapRef]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}