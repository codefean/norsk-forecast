{"ast":null,"code":"export function frostToGeoJSON(frostData) {\n  if (!frostData || !frostData.data) return {\n    type: \"FeatureCollection\",\n    features: []\n  };\n  return {\n    type: \"FeatureCollection\",\n    features: frostData.data.map(obs => {\n      var _obs$observations, _obs$observations$fin, _obs$observations2, _obs$observations2$fi, _obs$observations3, _obs$observations3$fi;\n      return {\n        type: \"Feature\",\n        geometry: {\n          type: \"Point\",\n          coordinates: obs.geometry.coordinates // Frost gives [lon, lat]\n        },\n        properties: {\n          snow_depth: ((_obs$observations = obs.observations) === null || _obs$observations === void 0 ? void 0 : (_obs$observations$fin = _obs$observations.find(o => o.elementId === \"snow_depth\")) === null || _obs$observations$fin === void 0 ? void 0 : _obs$observations$fin.value) || 0,\n          precipitation_type: ((_obs$observations2 = obs.observations) === null || _obs$observations2 === void 0 ? void 0 : (_obs$observations2$fi = _obs$observations2.find(o => o.elementId === \"precipitation_type\")) === null || _obs$observations2$fi === void 0 ? void 0 : _obs$observations2$fi.value) || \"none\",\n          wind_speed: ((_obs$observations3 = obs.observations) === null || _obs$observations3 === void 0 ? void 0 : (_obs$observations3$fi = _obs$observations3.find(o => o.elementId === \"wind_speed\")) === null || _obs$observations3$fi === void 0 ? void 0 : _obs$observations3$fi.value) || 0\n        }\n      };\n    })\n  };\n}","map":{"version":3,"names":["frostToGeoJSON","frostData","data","type","features","map","obs","_obs$observations","_obs$observations$fin","_obs$observations2","_obs$observations2$fi","_obs$observations3","_obs$observations3$fi","geometry","coordinates","properties","snow_depth","observations","find","o","elementId","value","precipitation_type","wind_speed"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/utils/transform.js"],"sourcesContent":["export function frostToGeoJSON(frostData) {\n  if (!frostData || !frostData.data) return { type: \"FeatureCollection\", features: [] };\n\n  return {\n    type: \"FeatureCollection\",\n    features: frostData.data.map((obs) => ({\n      type: \"Feature\",\n      geometry: {\n        type: \"Point\",\n        coordinates: obs.geometry.coordinates, // Frost gives [lon, lat]\n      },\n      properties: {\n        snow_depth: obs.observations?.find(o => o.elementId === \"snow_depth\")?.value || 0,\n        precipitation_type: obs.observations?.find(o => o.elementId === \"precipitation_type\")?.value || \"none\",\n        wind_speed: obs.observations?.find(o => o.elementId === \"wind_speed\")?.value || 0,\n      },\n    })),\n  };\n}\n"],"mappings":"AAAA,OAAO,SAASA,cAAcA,CAACC,SAAS,EAAE;EACxC,IAAI,CAACA,SAAS,IAAI,CAACA,SAAS,CAACC,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAErF,OAAO;IACLD,IAAI,EAAE,mBAAmB;IACzBC,QAAQ,EAAEH,SAAS,CAACC,IAAI,CAACG,GAAG,CAAEC,GAAG;MAAA,IAAAC,iBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,qBAAA,EAAAC,kBAAA,EAAAC,qBAAA;MAAA,OAAM;QACrCT,IAAI,EAAE,SAAS;QACfU,QAAQ,EAAE;UACRV,IAAI,EAAE,OAAO;UACbW,WAAW,EAAER,GAAG,CAACO,QAAQ,CAACC,WAAW,CAAE;QACzC,CAAC;QACDC,UAAU,EAAE;UACVC,UAAU,EAAE,EAAAT,iBAAA,GAAAD,GAAG,CAACW,YAAY,cAAAV,iBAAA,wBAAAC,qBAAA,GAAhBD,iBAAA,CAAkBW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK,YAAY,CAAC,cAAAZ,qBAAA,uBAAzDA,qBAAA,CAA2Da,KAAK,KAAI,CAAC;UACjFC,kBAAkB,EAAE,EAAAb,kBAAA,GAAAH,GAAG,CAACW,YAAY,cAAAR,kBAAA,wBAAAC,qBAAA,GAAhBD,kBAAA,CAAkBS,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK,oBAAoB,CAAC,cAAAV,qBAAA,uBAAjEA,qBAAA,CAAmEW,KAAK,KAAI,MAAM;UACtGE,UAAU,EAAE,EAAAZ,kBAAA,GAAAL,GAAG,CAACW,YAAY,cAAAN,kBAAA,wBAAAC,qBAAA,GAAhBD,kBAAA,CAAkBO,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,SAAS,KAAK,YAAY,CAAC,cAAAR,qBAAA,uBAAzDA,qBAAA,CAA2DS,KAAK,KAAI;QAClF;MACF,CAAC;IAAA,CAAC;EACJ,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}