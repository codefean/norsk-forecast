{"ast":null,"code":"var _jsxFileName = \"/Users/seanfagan/Desktop/climate-globe/src/ClimateGlobe.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nmapboxgl.accessToken = \"pk.eyJ1IjoibWFwZmVhbiIsImEiOiJjbTNuOGVvN3cxMGxsMmpzNThzc2s3cTJzIn0.1uhX17BCYd65SeQsW1yibA\";\nconst ClimateGlobe = () => {\n  _s();\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n  useEffect(() => {\n    if (mapRef.current) return;\n\n    // Initialize map\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-v9\",\n      center: [10, 63],\n      zoom: 4,\n      projection: \"globe\"\n    });\n    mapRef.current = map;\n    map.on(\"load\", () => {\n      // Add temperature layer\n      map.addSource(\"tas-delta\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.awgdtmlz\",\n        // TAS MBTiles tileset ID\n        tileSize: 256\n      });\n      map.addLayer({\n        id: \"tas-delta-layer\",\n        type: \"raster\",\n        source: \"tas-delta\",\n        paint: {\n          \"raster-opacity\": 0.75,\n          // Apply a color ramp based on temperature deltas\n          \"raster-color-map\": [[\"interpolate\", [\"linear\"], [\"raster-value\"], -5, \"#2166ac\",\n          // cold blues\n          0, \"#ffffbf\",\n          // neutral yellow\n          5, \"#b2182b\" // warm reds\n          ]]\n        }\n      });\n\n      // Add precipitation layer (toggle later)\n      map.addSource(\"pr-delta\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.4m01bgb0\",\n        // PR MBTiles tileset ID\n        tileSize: 256\n      });\n      map.addLayer({\n        id: \"pr-delta-layer\",\n        type: \"raster\",\n        source: \"pr-delta\",\n        layout: {\n          visibility: \"none\"\n        },\n        paint: {\n          \"raster-opacity\": 0.75,\n          \"raster-color-map\": [[\"interpolate\", [\"linear\"], [\"raster-value\"], -2, \"#8c510a\",\n          // dry browns\n          0, \"#f7f7f7\",\n          // neutral gray\n          2, \"#01665e\" // wet greens\n          ]]\n        }\n      });\n    });\n    return () => map.remove();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapContainer,\n      style: {\n        height: \"100vh\",\n        width: \"100vw\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ClimateGlobe, \"trBYWQnBQabdsyB7ysINFei525A=\");\n_c = ClimateGlobe;\nexport default ClimateGlobe;\nvar _c;\n$RefreshReg$(_c, \"ClimateGlobe\");","map":{"version":3,"names":["React","useEffect","useRef","mapboxgl","jsxDEV","_jsxDEV","accessToken","ClimateGlobe","_s","mapContainer","mapRef","current","map","Map","container","style","center","zoom","projection","on","addSource","type","url","tileSize","addLayer","id","source","paint","layout","visibility","remove","children","ref","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/ClimateGlobe.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\n\nmapboxgl.accessToken = \"pk.eyJ1IjoibWFwZmVhbiIsImEiOiJjbTNuOGVvN3cxMGxsMmpzNThzc2s3cTJzIn0.1uhX17BCYd65SeQsW1yibA\";\n\nconst ClimateGlobe = () => {\n  const mapContainer = useRef(null);\n  const mapRef = useRef(null);\n\n  useEffect(() => {\n    if (mapRef.current) return;\n\n    // Initialize map\n    const map = new mapboxgl.Map({\n      container: mapContainer.current,\n      style: \"mapbox://styles/mapbox/satellite-v9\",\n      center: [10, 63],\n      zoom: 4,\n      projection: \"globe\"\n    });\n\n    mapRef.current = map;\n\n    map.on(\"load\", () => {\n      // Add temperature layer\n      map.addSource(\"tas-delta\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.awgdtmlz\", // TAS MBTiles tileset ID\n        tileSize: 256\n      });\n\n      map.addLayer({\n        id: \"tas-delta-layer\",\n        type: \"raster\",\n        source: \"tas-delta\",\n        paint: {\n          \"raster-opacity\": 0.75,\n          // Apply a color ramp based on temperature deltas\n          \"raster-color-map\": [\n            [\"interpolate\", [\"linear\"], [\"raster-value\"],\n              -5, \"#2166ac\",   // cold blues\n               0, \"#ffffbf\",   // neutral yellow\n               5, \"#b2182b\"    // warm reds\n            ]\n          ]\n        }\n      });\n\n      // Add precipitation layer (toggle later)\n      map.addSource(\"pr-delta\", {\n        type: \"raster\",\n        url: \"mapbox://mapfean.4m01bgb0\", // PR MBTiles tileset ID\n        tileSize: 256\n      });\n\n      map.addLayer({\n        id: \"pr-delta-layer\",\n        type: \"raster\",\n        source: \"pr-delta\",\n        layout: { visibility: \"none\" },\n        paint: {\n          \"raster-opacity\": 0.75,\n          \"raster-color-map\": [\n            [\"interpolate\", [\"linear\"], [\"raster-value\"],\n              -2, \"#8c510a\",  // dry browns\n               0, \"#f7f7f7\",  // neutral gray\n               2, \"#01665e\"   // wet greens\n            ]\n          ]\n        }\n      });\n    });\n\n    return () => map.remove();\n  }, []);\n\n  return (\n    <div>\n      <div ref={mapContainer} style={{ height: \"100vh\", width: \"100vw\" }} />\n    </div>\n  );\n};\n\nexport default ClimateGlobe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}