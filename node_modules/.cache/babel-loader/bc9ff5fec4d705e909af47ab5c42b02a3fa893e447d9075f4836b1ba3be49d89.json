{"ast":null,"code":"var _jsxFileName = \"/Users/seanfagan/Desktop/climate-globe/src/components/SnowOverlay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SnowOverlay({\n  geojson,\n  map\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const snowflakes = useRef([]);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const resize = () => {\n      canvas.width = map.getContainer().offsetWidth;\n      canvas.height = map.getContainer().offsetHeight;\n    };\n    resize();\n    window.addEventListener(\"resize\", resize);\n    function drawSnow() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      snowflakes.current.forEach(flake => {\n        ctx.beginPath();\n        ctx.arc(flake.x, flake.y, flake.size, 0, Math.PI * 2);\n        ctx.fillStyle = \"white\";\n        ctx.fill();\n        flake.y += flake.speed;\n        if (flake.y > canvas.height) {\n          flake.y = -flake.size;\n          flake.x = Math.random() * canvas.width;\n        }\n      });\n      animationRef.current = requestAnimationFrame(drawSnow);\n    }\n    drawSnow();\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, [map]);\n  useEffect(() => {\n    if (!map || !geojson) return;\n    const snowStations = geojson.features.filter(f => f.properties.precipitation_type === \"snow\");\n    snowflakes.current = snowStations.flatMap(station => {\n      const px = map.project(station.geometry.coordinates);\n      return Array.from({\n        length: 15\n      }).map(() => ({\n        x: px.x + (Math.random() * 40 - 20),\n        y: px.y + Math.random() * 200,\n        size: 2 + Math.random() * 3,\n        speed: 0.5 + Math.random() * 1.5\n      }));\n    });\n  }, [geojson, map]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      pointerEvents: \"none\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(SnowOverlay, \"NeuZ7uooPb+z9XkjKi1/ClmZ5nM=\");\n_c = SnowOverlay;\nexport default SnowOverlay;\nvar _c;\n$RefreshReg$(_c, \"SnowOverlay\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","SnowOverlay","geojson","map","_s","canvasRef","animationRef","snowflakes","canvas","current","ctx","getContext","resize","width","getContainer","offsetWidth","height","offsetHeight","window","addEventListener","drawSnow","clearRect","forEach","flake","beginPath","arc","x","y","size","Math","PI","fillStyle","fill","speed","random","requestAnimationFrame","cancelAnimationFrame","removeEventListener","snowStations","features","filter","f","properties","precipitation_type","flatMap","station","px","project","geometry","coordinates","Array","from","length","ref","style","position","top","left","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/components/SnowOverlay.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nfunction SnowOverlay({ geojson, map }) {\n  const canvasRef = useRef(null);\n  const animationRef = useRef(null);\n  const snowflakes = useRef([]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n\n    const resize = () => {\n      canvas.width = map.getContainer().offsetWidth;\n      canvas.height = map.getContainer().offsetHeight;\n    };\n    resize();\n    window.addEventListener(\"resize\", resize);\n\n    function drawSnow() {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      snowflakes.current.forEach((flake) => {\n        ctx.beginPath();\n        ctx.arc(flake.x, flake.y, flake.size, 0, Math.PI * 2);\n        ctx.fillStyle = \"white\";\n        ctx.fill();\n\n        flake.y += flake.speed;\n        if (flake.y > canvas.height) {\n          flake.y = -flake.size;\n          flake.x = Math.random() * canvas.width;\n        }\n      });\n\n      animationRef.current = requestAnimationFrame(drawSnow);\n    }\n\n    drawSnow();\n\n    return () => {\n      cancelAnimationFrame(animationRef.current);\n      window.removeEventListener(\"resize\", resize);\n    };\n  }, [map]);\n\n  useEffect(() => {\n    if (!map || !geojson) return;\n\n    const snowStations = geojson.features.filter(\n      (f) => f.properties.precipitation_type === \"snow\"\n    );\n\n    snowflakes.current = snowStations.flatMap((station) => {\n      const px = map.project(station.geometry.coordinates);\n      return Array.from({ length: 15 }).map(() => ({\n        x: px.x + (Math.random() * 40 - 20),\n        y: px.y + Math.random() * 200,\n        size: 2 + Math.random() * 3,\n        speed: 0.5 + Math.random() * 1.5,\n      }));\n    });\n  }, [geojson, map]);\n\n  return (\n    <canvas\n      ref={canvasRef}\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        pointerEvents: \"none\",\n      }}\n    />\n  );\n}\n\nexport default SnowOverlay;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}