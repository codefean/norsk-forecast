{"ast":null,"code":"// src/components/Layers.js\nimport mapboxgl from \"mapbox-gl\";\nexport default function Layers(map) {\n  // Remove existing layers if they exist (to avoid duplicates on reload)\n  if (map.getLayer(\"frost-layer\")) {\n    map.removeLayer(\"frost-layer\");\n  }\n  if (map.getSource(\"frost-live\")) {\n    map.removeSource(\"frost-live\");\n  }\n\n  // Add Frost data source again (map.getSource check avoids errors)\n  if (!map.getSource(\"frost-live\")) {\n    map.addSource(\"frost-live\", {\n      type: \"geojson\",\n      data: {\n        type: \"FeatureCollection\",\n        features: []\n      } // will be set by MapView\n    });\n  }\n\n  // Add circle layer with dynamic styling\n  map.addLayer({\n    id: \"frost-layer\",\n    type: \"circle\",\n    source: \"frost-live\",\n    paint: {\n      // Circle size based on snow depth\n      \"circle-radius\": [\"interpolate\", [\"linear\"], [\"get\", \"snow_depth\"], 0, 4,\n      // 0 cm → 4px\n      10, 6,\n      // 10 cm → 6px\n      30, 10,\n      // 30 cm → 10px\n      60, 16 // 60 cm+ → 16px\n      ],\n      // Circle color based on precipitation type\n      \"circle-color\": [\"match\", [\"get\", \"precipitation_type\"], \"rain\", \"#4a90e2\",\n      // blue for rain\n      \"snow\", \"#ffffff\",\n      // white for snow\n      \"sleet\", \"#a3d3ff\",\n      // light blue for sleet\n      \"hail\", \"#7a7a7a\",\n      // gray for hail\n      /* default */\n      \"#888888\"],\n      // Circle stroke for better visibility\n      \"circle-stroke-width\": 1,\n      \"circle-stroke-color\": \"#000\",\n      // Circle opacity based on wind speed\n      \"circle-opacity\": [\"interpolate\", [\"linear\"], [\"get\", \"wind_speed\"], 0, 0.6, 10, 0.8, 20, 1.0]\n    }\n  });\n\n  // Add popups on click for detailed info\n  map.on(\"click\", \"frost-layer\", e => {\n    var _props$snow_depth, _props$wind_speed;\n    const props = e.features[0].properties;\n    const coordinates = e.features[0].geometry.coordinates.slice();\n\n    // Ensure popup shows over the correct point when map is zoomed\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n    }\n    const snowDepth = (_props$snow_depth = props.snow_depth) !== null && _props$snow_depth !== void 0 ? _props$snow_depth : \"N/A\";\n    const windSpeed = (_props$wind_speed = props.wind_speed) !== null && _props$wind_speed !== void 0 ? _props$wind_speed : \"N/A\";\n    const precipitation = props.precipitation_type || \"none\";\n    new mapboxgl.Popup().setLngLat(coordinates).setHTML(`\n        <div style=\"font-size:14px; line-height:1.4;\">\n          <strong>Snow Depth:</strong> ${snowDepth} cm<br/>\n          <strong>Wind Speed:</strong> ${windSpeed} m/s<br/>\n          <strong>Precipitation:</strong> ${precipitation}<br/>\n          <small>${props.referenceTime}</small>\n        </div>\n      `).addTo(map);\n  });\n\n  // Change cursor to pointer when hovering over points\n  map.on(\"mouseenter\", \"frost-layer\", () => {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n  map.on(\"mouseleave\", \"frost-layer\", () => {\n    map.getCanvas().style.cursor = \"\";\n  });\n}\n_c = Layers;\nvar _c;\n$RefreshReg$(_c, \"Layers\");","map":{"version":3,"names":["mapboxgl","Layers","map","getLayer","removeLayer","getSource","removeSource","addSource","type","data","features","addLayer","id","source","paint","on","e","_props$snow_depth","_props$wind_speed","props","properties","coordinates","geometry","slice","Math","abs","lngLat","lng","snowDepth","snow_depth","windSpeed","wind_speed","precipitation","precipitation_type","Popup","setLngLat","setHTML","referenceTime","addTo","getCanvas","style","cursor","_c","$RefreshReg$"],"sources":["/Users/seanfagan/Desktop/climate-globe/src/components/Layers.js"],"sourcesContent":["// src/components/Layers.js\nimport mapboxgl from \"mapbox-gl\";\n\nexport default function Layers(map) {\n  // Remove existing layers if they exist (to avoid duplicates on reload)\n  if (map.getLayer(\"frost-layer\")) {\n    map.removeLayer(\"frost-layer\");\n  }\n  if (map.getSource(\"frost-live\")) {\n    map.removeSource(\"frost-live\");\n  }\n\n  // Add Frost data source again (map.getSource check avoids errors)\n  if (!map.getSource(\"frost-live\")) {\n    map.addSource(\"frost-live\", {\n      type: \"geojson\",\n      data: { type: \"FeatureCollection\", features: [] }, // will be set by MapView\n    });\n  }\n\n  // Add circle layer with dynamic styling\n  map.addLayer({\n    id: \"frost-layer\",\n    type: \"circle\",\n    source: \"frost-live\",\n    paint: {\n      // Circle size based on snow depth\n      \"circle-radius\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"get\", \"snow_depth\"],\n        0, 4,    // 0 cm → 4px\n        10, 6,   // 10 cm → 6px\n        30, 10,  // 30 cm → 10px\n        60, 16   // 60 cm+ → 16px\n      ],\n\n      // Circle color based on precipitation type\n      \"circle-color\": [\n        \"match\",\n        [\"get\", \"precipitation_type\"],\n        \"rain\", \"#4a90e2\",    // blue for rain\n        \"snow\", \"#ffffff\",    // white for snow\n        \"sleet\", \"#a3d3ff\",   // light blue for sleet\n        \"hail\", \"#7a7a7a\",    // gray for hail\n        /* default */ \"#888888\"\n      ],\n\n      // Circle stroke for better visibility\n      \"circle-stroke-width\": 1,\n      \"circle-stroke-color\": \"#000\",\n\n      // Circle opacity based on wind speed\n      \"circle-opacity\": [\n        \"interpolate\",\n        [\"linear\"],\n        [\"get\", \"wind_speed\"],\n        0, 0.6,\n        10, 0.8,\n        20, 1.0\n      ],\n    },\n  });\n\n  // Add popups on click for detailed info\n  map.on(\"click\", \"frost-layer\", e => {\n    const props = e.features[0].properties;\n    const coordinates = e.features[0].geometry.coordinates.slice();\n\n    // Ensure popup shows over the correct point when map is zoomed\n    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n      coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n    }\n\n    const snowDepth = props.snow_depth ?? \"N/A\";\n    const windSpeed = props.wind_speed ?? \"N/A\";\n    const precipitation = props.precipitation_type || \"none\";\n\n    new mapboxgl.Popup()\n      .setLngLat(coordinates)\n      .setHTML(`\n        <div style=\"font-size:14px; line-height:1.4;\">\n          <strong>Snow Depth:</strong> ${snowDepth} cm<br/>\n          <strong>Wind Speed:</strong> ${windSpeed} m/s<br/>\n          <strong>Precipitation:</strong> ${precipitation}<br/>\n          <small>${props.referenceTime}</small>\n        </div>\n      `)\n      .addTo(map);\n  });\n\n  // Change cursor to pointer when hovering over points\n  map.on(\"mouseenter\", \"frost-layer\", () => {\n    map.getCanvas().style.cursor = \"pointer\";\n  });\n\n  map.on(\"mouseleave\", \"frost-layer\", () => {\n    map.getCanvas().style.cursor = \"\";\n  });\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}